[
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Validate",
  "event_frequency": "All",
  "modified": "2021-09-04 11:19:20.091852",
  "name": "Item Drug Content Setting",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Item",
  "script": "if doc.item_drug_content:\n    drug_content = 0\n    for drug in doc.item_drug_content:\n        if not drug_content:\n            drug_content = drug.drug_content\n        else:\n            drug_content = drug_content + ', ' + drug.drug_content\n    if drug_content:\n        doc.drug_content = drug_content",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "event_frequency": "All",
  "modified": "2021-07-04 19:16:42.617349",
  "name": "Sales Invoice Prescription Drug Class",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Sales Invoice",
  "script": "if doc.is_internal_customer==0:\n\tfor item in doc.items:\n\t\tif item.prescription_drug_class:\n\t\t\tif item.restrict_quantity:\n\t\t\t\tif item.maximum_qty < item.stock_qty :\n\t\t\t\t\tfrappe.msgprint( msg= 'Maximum selling quantity for '+  item.item_code + ' is '+ str(item.maximum_qty) + ' for '+ item.prescription_drug_class, title='Item(s) have quantity restriction')\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Validate",
  "event_frequency": "All",
  "modified": "2021-07-04 19:17:17.706730",
  "name": "Warning for order type",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Purchase Order",
  "script": "selected_type = doc.order_type[0:1]\nwarning_list = []\nmessage=False\ncompany = frappe.get_doc('Company', doc.company)\nif not company.is_group:\n    for item in doc.items:\n        item_type = item.item_code[0:1]\n        if selected_type!=item_type:\n            if not message:\n                message = 'Row: '+str(item.idx)+' Item : '+str(item.item_code)+' is not '+doc.order_type+' type.<br/>'\n            else:\n                message = message+ 'Row: '+str(item.idx)+' Item : '+str(item.item_code)+' is not '+doc.order_type+' type.<br/>'\nelse:\n    for item in doc.items:\n        item_type = item.item_code[0:1]\n        if item_type != 'I':\n            if not message:\n                message = 'Row: '+str(item.idx)+' Item : '+str(item.item_code)+' is not Internal type.<br/>'\n            else:\n                message = message+ 'Row: '+str(item.idx)+' Item : '+str(item.item_code)+' is not Internal type.<br/>'\nif message:\n    frappe.throw( msg=message, title='Error! ')",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Validate",
  "event_frequency": "All",
  "modified": "2021-10-28 10:22:05.511710",
  "name": "Sales Invoice Expiry Notification",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Sales Invoice",
  "script": "for item in doc.items:\r\n    if item.batch_expiry_date and frappe.utils.date_diff(frappe.utils.today(), item.batch_expiry_date) <= 30:\r\n        frappe.msgprint( msg= item.item_code + ' will expire on '+str(item.batch_expiry_date), title='Item(s) Expire Soon')",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Cancel",
  "event_frequency": "All",
  "modified": "2021-07-04 19:18:09.664839",
  "name": "Demand Request Reject",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Sales Order",
  "script": "if not doc.reason_for_reject:\n    frappe.throw(msg=\"Please specify the reason for reject in Billing and Delivery Status Section\",title=\"Reason is missing\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "event_frequency": "All",
  "modified": "2021-07-04 19:18:39.896645",
  "name": "Setting PO in SO",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Sales Order",
  "script": "if doc.inter_company_order_reference:\n    doc.inter_company_purchase_order = doc.inter_company_order_reference",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Validate",
  "event_frequency": "All",
  "modified": "2021-07-04 19:19:06.457967",
  "name": "Prescription Drug Class",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Prescription Drug Class",
  "script": "if doc.restrict_quantity:\n\tif doc.max_qty==0:\n\t\tfrappe.throw( msg= 'Maximum Quantity Based on Stock UOM will be greater than Zero', title='Set Maximum Quantity!')",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "event_frequency": "All",
  "modified": "2021-08-27 18:46:04.537918",
  "name": "Superseded By SG Validation",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Item",
  "script": "item_drug = []\nglobal_drug = []\nsuperseded_items = []\nif doc.purchase_type=='External':\n    i_doc = frappe.db.get_list(\"Item\",{'superseded_by_sg': 1})\n    for itemd in doc.item_drug_content:\n        item_drug.append(itemd.drug_content)\n        item_drug.sort()\n    for i in i_doc:\n        superseded_items.append(str(i.name));\n    for item in superseded_items:\n        item_doc = frappe.get_doc('Item',item)\n        for drug in item_doc.item_drug_content:\n            global_drug.append(drug.drug_content)\n            global_drug.sort()\n        if global_drug==item_drug:\n            frappe.throw( msg= \"Can't add this medicine, which has been superseded by \"+item_doc.item_name, title='Error!')\n        global_drug = []\n        \nif doc.superseded_by_sg and doc.superseded_item:\n    doc.is_purchase_item = 0",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Submit",
  "event_frequency": "All",
  "modified": "2021-07-04 19:20:03.007603",
  "name": "Item Validation SO",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Sales Order",
  "script": "message=False\nfor item in doc.items:\n    if item.projected_qty <= item.stock_qty:\n        if not message:\n            message = 'Row: '+str(item.idx)+' Item : '+str(item.item_code)+' does not have enough quantity. <br/>'\n        else:\n            message = message+ 'Row: '+str(item.idx)+' Item : '+str(item.item_code)+' does not have enough quantity. <br/>'\nif message:\n    frappe.throw( msg=message, title='Error! ')",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Validate",
  "event_frequency": "All",
  "modified": "2021-07-13 09:46:28.507566",
  "name": "Sales Invoice Validation",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Sales Invoice",
  "script": "company = frappe.get_doc('Company', doc.company)\nif company.is_group == 1:\n\tmessage=False\n\tfor item in doc.items:\n\t    if item.sales_order:\n    \t\tso_doc = frappe.get_doc('Sales Order', item.sales_order)\n    \t\tif so_doc.workflow_state!=\"Demand Request Approved\":\n    \t\t\tif not message:\n    \t\t\t\tmessage = 'Row: '+str(item.idx)+' Item : '+str(item.item_code)+' with Sales Order '+item.sales_order+' is not Approved.<br/>'\n    \t\t\telse:\n    \t\t\t\tmessage = message+ 'Row: '+str(item.idx)+' Item : '+str(item.item_code)+' with Sales Order '+item.sales_order+' is not Approved.<br/>'\n\tif message:\n\t    frappe.throw( msg=message, title='Error! ')",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "event_frequency": "All",
  "modified": "2021-07-06 09:56:28.776159",
  "name": "Setting New Item",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Purchase Order",
  "script": "if doc.items:\n    for item in doc.items:\n        tab_name = frappe.db.get_value('Item Default', {'parent': item.item_code, 'parenttype': 'Item', 'company': doc.company}, ['name'])\n        frappe.db.set_value('Item Default', tab_name, { 'is_new_item': 0 })\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "event_frequency": "All",
  "modified": "2021-08-03 14:55:35.308183",
  "name": "Update status of FPR",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Payment Entry",
  "script": "if doc.franchise_payment_request:\n    frappe.db.set_value('Franchise Payment Request', doc.franchise_payment_request, { 'status': \"Paid\" })\n\nif doc.franchise_payment_entry:\n    fpe_doc = frappe.get_doc('Franchise Payment Entry', doc.franchise_payment_entry )\n    for item in fpe_doc.items:\n        frappe.msgprint(title='Test', msg=item.doc_name+\"--->\"+str(item.paid_amount))\n        fpr_doc = frappe.get_doc('Franchise Payment Request', item.doc_name)\n        fpr_doc.paid_amount = item.paid_amount\n        frappe.msgprint(title='Test', msg=item.paid_amount)\n        if(fpr_doc.purchase_amount <= fpr_doc.paid_amount):\n            fpr_doc.status='Paid'\n        else:\n            fpr_doc.status='Unpaid'\n        fpr_doc.save()",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Validate",
  "event_frequency": "All",
  "modified": "2021-08-04 11:22:12.419752",
  "name": "Item Restriction For franchise",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Item",
  "script": "company_name = frappe.db.get_value('User Permission', {'user':frappe.session.user,'allow': 'Company'}, ['for_value'])\nif company_name:\n    company_doc = frappe.get_doc(\"Company\", company_name)\n    if doc.purchase_type=='Internal' and company_doc.is_group ==0:\n        frappe.throw(msg=\"You are not authorised to edit Item\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Save",
  "event_frequency": "All",
  "modified": "2021-07-14 13:13:36.740223",
  "name": "Setting GST",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Customer",
  "script": "if doc.customer_type==\"Business\" :\n    doc_add = frappe.get_doc({\n    'doctype': 'Address',\n    'address_title' : doc.customer_name ,\n    'address_line1' : doc.address_line_1,\n    'city' : doc.city_town,\n    'gstin' : doc.gst_number,\n    'gst_state' : 'Kerala',\n    'gst_state_number': 32\n    })\n    links = {\"link_doctype\":\"Customer\", \"link_name\": doc.name }\n    doc_add.append(\"links\", links)\n    doc_add.save()",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Save",
  "event_frequency": "All",
  "modified": "2021-07-27 11:17:01.418734",
  "name": "Superseded From",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Item",
  "script": "if doc.superseded_by_sg and doc.superseded_item:\n    item_doc = frappe.get_doc('Item', doc.superseded_item)\n    item_doc.superseded_from = doc.item_name\n    item_doc.superseded = \"Superseded by \"+ doc.item_name\n    item_doc.save()\n    ",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "event_frequency": "Daily",
  "modified": "2021-08-03 17:27:45.597105",
  "name": "Creating Weekly Notification",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Franchise Payment Entry",
  "script": "def get_total_payment_status(child_company_list, date_count):\n    for company in child_company_list:\n        total_paid_amount=0\n        total_purchase_amount=0\n        today = frappe.utils.today()\n        from_date = frappe.utils.add_days(today,-30)\n        frappe.msgprint(title='Test', msg=frappe.utils.get_weekday()+\" \"+company.name)\n        for fpr in frappe.get_list(\"Franchise Payment Request\", filters={\"transaction_date\": [\"between\",  (from_date, today)], \"status\":'Unpaid', \"company\": company.name }):\n            if fpr:\n                fpr_doc = frappe.get_doc(\"Franchise Payment Request\", fpr.name)\n                if fpr_doc.paid_amount :\n                    total_paid_amount=fpr_doc.paid_amount + total_paid_amount\n                if fpr_doc.purchase_amount :\n                    total_purchase_amount=fpr_doc.purchase_amount + total_purchase_amount\n        balance = total_purchase_amount-total_paid_amount\n        if(balance):\n            pndoc = frappe.get_doc({\n                'doctype': 'Payment Notification',\n                'title': 'New Notification'\n            })\n            pndoc.company_name = company.name\n            pndoc.date = today\n            pndoc.due_date = frappe.utils.add_days(today, date_count)\n            pndoc.day = frappe.utils.get_weekday()\n            pndoc.amount = balance\n            weekdays =\t{ 0 : 'Sunday', 1: 'Monday', 2:'Tuesday', 3 : 'Wednesday', 4 : 'Thursday', 5: 'Friday', 6: 'Saturday' }\n            if weekdays[1]==frappe.utils.get_weekday():\n                message = \"Please clear the payment dues amount INR \"+ str(balance) +\" to central office before wedenesday ( \"+frappe.utils.add_days(today, date_count)+\" )\"\n            if weekdays[2]==frappe.utils.get_weekday():\n                message = \"Please clear the payment dues amount INR \"+ str(balance) +\" to central office before wedenesday ( \"+frappe.utils.add_days(today, date_count)+\" )\"\n            if weekdays[3]==frappe.utils.get_weekday():\n                message = \"Please clear the payment INR \"+ str(balance) +\" by today. If not software access will be blocked from tomorow ( \"+frappe.utils.add_days(today, date_count)+\" )\"\n            if weekdays[4]==frappe.utils.get_weekday():\n                message = \"Access blocked by admin\"\n                frappe.db.set_value('Company', company.name, 'block_user_access', 1)\n            pndoc.message = message\n            pndoc.insert()\n\nchild_company_list = frappe.db.get_list(\"Company\",{'is_group':0})\nweekdays =\t{ 0 : 'Sunday', 1: 'Monday', 2:'Tuesday', 3 : 'Wednesday', 4 : 'Thursday', 5: 'Friday', 6: 'Saturday' }\nif weekdays[1]==frappe.utils.get_weekday():\n    date_count = 2\n    get_total_payment_status(child_company_list, date_count)\n\nif weekdays[2]==frappe.utils.get_weekday():\n    date_count = 1\n    get_total_payment_status(child_company_list, date_count)\n\nif weekdays[3]==frappe.utils.get_weekday():\n    date_count = 1\n    get_total_payment_status(child_company_list, date_count)\n\nif weekdays[4]==frappe.utils.get_weekday():\n    date_count = 0\n    get_total_payment_status(child_company_list, date_count)\n",
  "script_type": "Scheduler Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Validate",
  "event_frequency": "All",
  "modified": "2021-08-03 17:12:36.510446",
  "name": "Validation for Batch in SI",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Sales Invoice",
  "script": "if doc.items:\n    for item in doc.items:\n        if item.batch_no:\n            batch = item.batch_no\n        status = frappe.db.get_value('Batch', batch, 'disabled')\n        if status:\n            frappe.throw(\n                title='Error',\n                msg='Batch is disabled for item '+ item.item_name\n                )",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Validate",
  "event_frequency": "All",
  "modified": "2021-08-04 15:18:16.544708",
  "name": "Return Item To Franchise",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Sales Invoice",
  "script": "if not doc.is_return:\n    today=frappe.utils.today()\n    for item in doc.items:\n        if item.batch_expiry_date:\n            expired_date = item.batch_expiry_date\n            if frappe.utils.date_diff(today, expired_date) > 0:\n                 frappe.throw(\n                     title='Error',\n                     msg='Batch is already expired for the item' + ' ' + item.item_name\n                    )\n            ",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Validate",
  "event_frequency": "All",
  "modified": "2021-09-08 15:32:48.685709",
  "name": "Batch ID Setting",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Batch",
  "script": "if doc.batch_name and doc.item:\n    doc.batch_id = doc.batch_name+\"-\"+doc.item",
  "script_type": "DocType Event"
 }
]